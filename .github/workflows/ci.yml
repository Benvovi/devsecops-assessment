name: ci

on:
  push:
    branches: [main, dev]
  pull_request:

jobs:
  build_scan_push:
    strategy:
      matrix:
        service: [account-service, transaction-service, payment-service]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Run unit tests
        run: mvn -B -f sample-services/${{ matrix.service }}/pom.xml test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image
        run: |
          REPO=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          IMAGE=ghcr.io/$REPO/${{ matrix.service }}:${{ github.sha }}
          echo "Building $IMAGE"
          docker build -t $IMAGE sample-services/${{ matrix.service }}
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMAGE }}
          format: sarif
          output: trivy.sarif

  migrate_db:
    needs: build_scan_push
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: core
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
     
      - name: Install Flyway CLI
        run: |
          curl -L https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/10.16.0/flyway-commandline-10.16.0-linux-x64.tar.gz | tar xz
          sudo ln -s $PWD/flyway-10.16.0/flyway /usr/local/bin/flyway

      - name: Run Flyway migrations
        run: |
          flyway -url=jdbc:postgresql://localhost:5432/core \
               -user=postgres \
               -password=postgres \
               -locations=filesystem:implementation/ci-cd/migrations \
               migrate

      - name: Log in to GHCR (for SBOM generation)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker images
        run: |
          docker pull ghcr.io/${{ github.repository }}/account-service:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository }}/transaction-service:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository }}/payment-service:${{ github.sha }}

      - name: Install Syft CLI
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh
          sudo mv ./bin/syft /usr/local/bin/syft

      - name: Generate SBOM for account-service
        run: |
          syft ghcr.io/${{ github.repository }}/account-service:${{ github.sha }} -o json > sbom-account.json

      - name: Generate SBOM for transaction-service
        run: |
          syft ghcr.io/${{ github.repository }}/transaction-service:${{ github.sha }} -o json > sbom-transaction.json

      - name: Generate SBOM for payment-service
        run: |
          syft ghcr.io/${{ github.repository }}/payment-service:${{ github.sha }} -o json > sbom-payment.json

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sboms
          path: |
            sbom-account.json
            sbom-transaction.json
            sbom-payment.json

